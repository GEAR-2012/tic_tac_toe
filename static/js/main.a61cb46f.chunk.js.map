{"version":3,"sources":["components/Game/Scoreboard.module.css","components/UI/RadioSelector.module.css","components/Game/Gameboard.module.css","components/UI/VerticalDotMenu.module.css","components/UI/MenuModal.module.css","components/Game/Header.module.css","components/UI/Card.module.css","App.module.css","App.js","components/UI/Card.js","components/UI/RadioSelector.js","components/UI/MenuModal.js","components/UI/VerticalDotMenu.js","components/Game/Header.js","components/Game/Gameboard.js","components/Game/Scoreboard.js","functions/gameLogic.js","index.js"],"names":["module","exports","state","Card","props","className","classes","card","children","levels","RadioSelector","radioInputs","map","level","radio","radio__input","id","checked","onChange","onLevelChange","type","name","radio__control","radio__label","radios","Backdrop","onClick","onCloseMenu","backdrop","ModalOverlay","menu","title","e","parseInt","target","MenuModal","Fragment","ReactDOM","createPortal","document","getElementById","VerticalDotMenu","onClickMenu","dot","Header","header","Gameboard","extraClass","clickHandler","onSpotClick","highlight","gameMarks","Object","entries","gameMap","property","colClass","row","col","coor","mark","spot","gameboard","Scoreboard","scoreboard","item","player","score","scorePlayerA","scoreTie","scorePlayerB","getTargets","markA","markB","mode","searchedMark","targets","checkRows","push","checkCols","checkLeftRight","matchingSet","forEach","key","pattern","RegExp","set","filter","test","checkFor3Matches","lookingForTargets","matchingRow","matchingCol","matching","lineLeft","lineRight","length","slice","countSameMarks","countEmptySpots","checkForWinner","winner","line","leftRight","initialGameMap","a0","a1","a2","b0","b1","b2","c0","c1","c2","isGameEnd","isPlayerMarked","Math","floor","random","App","useState","isMenuOpen","setIsMenuOpen","setLevel","setGameMap","setScorePlayerA","setScorePlayerB","setScoreTie","setHighlight","checkGameStatus","result","prevScore","values","includes","newGame","setTimeout","targetsOffense","targetsDefense","targetsRemains","machineMark","targLen","targIndex","prevState","num","app","spotId","render"],"mappings":"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","file":"static/js/main.a61cb46f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreboard\":\"Scoreboard_scoreboard__2phB4\",\"item\":\"Scoreboard_item__2lZ5t\",\"player\":\"Scoreboard_player__2ijns\",\"score\":\"Scoreboard_score__2d3JT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radios\":\"RadioSelector_radios__1GQpi\",\"radio\":\"RadioSelector_radio__3aeEz\",\"radio__label\":\"RadioSelector_radio__label__3R3oi\",\"radio__input\":\"RadioSelector_radio__input__Qzkv2\",\"radio__control\":\"RadioSelector_radio__control__uWIht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameboard\":\"Gameboard_gameboard__24egN\",\"spot\":\"Gameboard_spot__2-w8z\",\"mark\":\"Gameboard_mark__2VsMi\",\"tie\":\"Gameboard_tie__fvtPQ\",\"dim\":\"Gameboard_dim__BtJ3w\",\"hgl\":\"Gameboard_hgl__3-dDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"VerticalDotMenu_menu__2si0p\",\"dot\":\"VerticalDotMenu_dot__18TcN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"MenuModal_backdrop__1IqOz\",\"menu\":\"MenuModal_menu__lV8as\",\"title\":\"MenuModal_title__Hqigz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3u7p4\",\"title\":\"Header_title__3V8OO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","import React, { useState } from \"react\";\nimport MenuModal from \"./components/UI/MenuModal\";\nimport Header from \"./components/Game/Header\";\nimport Gameboard from \"./components/Game/Gameboard\";\nimport Scoreboard from \"./components/Game/Scoreboard\";\nimport { checkForWinner, checkForFreeSpot, getTargets } from \"./functions/gameLogic\";\nimport classes from \"./App.module.css\";\n\nconst initialGameMap = {\n  a0: null,\n  a1: null,\n  a2: null,\n  b0: null,\n  b1: null,\n  b2: null,\n  c0: null,\n  c1: null,\n  c2: null,\n};\nlet state;\nlet isGameEnd = false;\n// Player A mark 'X'\nconst markA = \"X\";\n// Player B mark 'O'\nconst markB = \"O\";\nlet isPlayerMarked = Math.floor(Math.random() * 2);\n// levels:\n// level 0 => only random machine targets\n// level 1 => defense targets\n// level 2 => defense & offense targets\n\nfunction App() {\n  const [isMenuOpen, setIsMenuOpen] = useState(\"1\");\n  const [level, setLevel] = useState(2);\n  const [gameMap, setGameMap] = useState(initialGameMap);\n  const [scorePlayerA, setScorePlayerA] = useState(0);\n  const [scorePlayerB, setScorePlayerB] = useState(0);\n  const [scoreTie, setScoreTie] = useState(0);\n  const [highlight, setHighlight] = useState();\n\n  const openMenuHandler = () => {\n    setIsMenuOpen(\"1\");\n  };\n\n  const closeMenuHandler = () => {\n    setIsMenuOpen(\"0\");\n  };\n\n  const setLevelHandler = (num) => {\n    setLevel(num);\n  };\n\n  state = { ...gameMap };\n\n  const checkGameStatus = () => {\n    if (checkForWinner(state, markA, markB)) {\n      isGameEnd = true;\n      const result = checkForWinner(state, markA, markB);\n      if (result.winner === markA) {\n        setScorePlayerA((prevScore) => {\n          return ++prevScore;\n        });\n      }\n      if (result.winner === markB) {\n        setScorePlayerB((prevScore) => {\n          return ++prevScore;\n        });\n      }\n      setHighlight(result.line);\n    } else if (!checkForFreeSpot(state)) {\n      isGameEnd = true;\n      setScoreTie((prevScore) => {\n        return ++prevScore;\n      });\n      setHighlight(\"t\");\n    }\n  };\n\n  const spotClickHandler = (spotId) => {\n    if (isGameEnd) {\n      newGame();\n    } else if (gameMap[spotId] === null && !isPlayerMarked) {\n      isPlayerMarked = true;\n      state = { ...gameMap, [spotId]: markA };\n      setGameMap((prevState) => {\n        return {\n          ...prevState,\n          [spotId]: markA,\n        };\n      });\n      checkGameStatus();\n    }\n  };\n\n  const newGame = () => {\n    setGameMap(initialGameMap);\n    setHighlight(null);\n    isGameEnd = false;\n  };\n\n  // if it is the machine turn\n  if (!isGameEnd) {\n    if (isPlayerMarked && Object.values(gameMap).includes(null)) {\n      setTimeout(() => {\n        isPlayerMarked = false;\n        const targets = [];\n        const targetsOffense = getTargets(state, markA, markB, \"offense\");\n        const targetsDefense = getTargets(state, markA, markB, \"defense\");\n        const targetsRemains = Object.entries(gameMap)\n          .filter((spot) => spot[1] === null && spot)\n          .map((spot) => spot[0]);\n\n        if (targetsOffense.length > 0 && level === 2) {\n          // offense mode\n          targets.push(...targetsOffense);\n        } else if (targetsDefense.length > 0 && level >= 1) {\n          // defense mode\n          targets.push(...targetsDefense);\n        } else if (level >= 0) {\n          // remains mode\n          targets.push(...targetsRemains);\n        }\n\n        machineMark(targets);\n        checkGameStatus();\n      }, 600);\n    }\n  }\n\n  const machineMark = (targets) => {\n    const targLen = targets.length;\n    if (targLen > 1) {\n      const targIndex = Math.floor(Math.random() * targLen);\n      state = { ...gameMap, [targets[targIndex]]: markB };\n      setGameMap((prevState) => {\n        return {\n          ...prevState,\n          [targets[targIndex]]: markB,\n        };\n      });\n    } else {\n      state = { ...gameMap, [targets]: markB };\n\n      setGameMap((prevState) => {\n        return {\n          ...prevState,\n          [targets]: markB,\n        };\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {isMenuOpen === \"1\" && <MenuModal level={level} onLevelChange={setLevelHandler} onCloseMenu={closeMenuHandler} />}\n      <div className={classes.app}>\n        <Header onClickMenu={openMenuHandler} />\n        <Gameboard highlight={highlight} onSpotClick={spotClickHandler} gameMap={gameMap} />\n        <Scoreboard scorePlayerA={scorePlayerA} scorePlayerB={scorePlayerB} scoreTie={scoreTie} />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\n\nimport classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return <div className={`${classes.card} ${props.className}`}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport classes from \"./RadioSelector.module.css\";\n\nconst levels = [0, 1, 2];\n\nconst RadioSelector = (props) => {\n  const radioInputs = levels.map((level) => {\n    return (\n      <label key={level} className={classes.radio}>\n        <span className={classes.radio__input}>\n          <input\n            id={level}\n            checked={props.level === level ? true : false}\n            onChange={props.onLevelChange}\n            type=\"radio\"\n            name=\"level\"\n          />\n          <span className={classes.radio__control} />\n        </span>\n        <span className={classes.radio__label}>Level {level + 1}</span>\n      </label>\n    );\n  });\n  return <div className={classes.radios}>{radioInputs}</div>;\n};\n\nexport default RadioSelector;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Card from \"./Card\";\nimport RadioSelector from \"./RadioSelector\";\n\nimport classes from \"./MenuModal.module.css\";\n\nconst Backdrop = (props) => {\n  return <div onClick={props.onCloseMenu} className={classes.backdrop} />;\n};\n\nconst ModalOverlay = (props) => {\n  const levelChangeHandler = (e) => {\n    const id = parseInt(e.target.id, 10);\n    props.onLevelChange(id);\n  };\n\n  return (\n    <Card className={classes.menu}>\n      <h2 className={classes.title}>Menu</h2>\n      <RadioSelector level={props.level} onLevelChange={levelChangeHandler} />\n    </Card>\n  );\n};\n\nconst MenuModal = (props) => {\n  return (\n    <React.Fragment>\n      {ReactDOM.createPortal(<Backdrop onCloseMenu={props.onCloseMenu} />, document.getElementById(\"backdrop-root\"))}\n\n      {ReactDOM.createPortal(\n        <ModalOverlay onLevelChange={props.onLevelChange} level={props.level} />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default MenuModal;\n","import React from \"react\";\nimport classes from \"./VerticalDotMenu.module.css\";\n\nconst VerticalDotMenu = (props) => {\n  const menuClickHandler = () => {\n    props.onClickMenu();\n  };\n\n  return (\n    <div onClick={menuClickHandler} className={classes.menu}>\n      <div className={classes.dot} />\n      <div className={classes.dot} />\n      <div className={classes.dot} />\n    </div>\n  );\n};\n\nexport default VerticalDotMenu;\n","import React from \"react\";\nimport VerticalDotMenu from \"../UI/VerticalDotMenu\";\n\nimport classes from \"./Header.module.css\";\n\nconst Header = (props) => {\n  return (\n    <div className={classes.header}>\n      <h1 className={classes.title}>Tic Tac Toe</h1>\n      <VerticalDotMenu onClickMenu={props.onClickMenu} />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport classes from \"./Gameboard.module.css\";\n\nconst Gameboard = (props) => {\n  const clickHandler = (e) => {\n    props.onSpotClick(e.target.id);\n  };\n\n  let extraClass;\n  switch (props.highlight) {\n    case \"l\":\n      extraClass = \"left\";\n      break;\n    case \"r\":\n      extraClass = \"right\";\n      break;\n    case \"t\":\n      extraClass = \"tie\";\n      break;\n    case \"a\":\n      extraClass = \"row-a\";\n      break;\n    case \"b\":\n      extraClass = \"row-b\";\n      break;\n    case \"c\":\n      extraClass = \"row-c\";\n      break;\n    case \"0\":\n      extraClass = \"col-0\";\n      break;\n    case \"1\":\n      extraClass = \"col-1\";\n      break;\n    case \"2\":\n      extraClass = \"col-2\";\n      break;\n    default:\n      break;\n  }\n\n  const gameMarks = Object.entries(props.gameMap).map((property) => {\n    const row = property[0][0];\n    const col = property[0][1];\n    const coor = property[0];\n    const mark = property[1];\n    let colClass;\n    if (extraClass) {\n      colClass = \"dim\";\n      if (row === props.highlight || col === props.highlight) {\n        colClass = \"hgl\";\n      }\n      if (extraClass === \"left\") {\n        switch (coor) {\n          case \"a0\":\n          case \"b1\":\n          case \"c2\":\n            colClass = \"hgl\";\n            break;\n          default:\n            break;\n        }\n      }\n      if (extraClass === \"right\") {\n        switch (coor) {\n          case \"a2\":\n          case \"b1\":\n          case \"c0\":\n            colClass = \"hgl\";\n            break;\n          default:\n            break;\n        }\n      }\n    }\n    return (\n      <div key={coor} id={coor} onClick={clickHandler} className={`${classes.spot} ${classes[colClass]}`}>\n        <p className={classes.mark}>{mark}</p>\n      </div>\n    );\n  });\n\n  return <div className={`${classes.gameboard} ${classes[extraClass]}`}>{gameMarks}</div>;\n};\n\nexport default Gameboard;\n","import React from \"react\";\n\nimport classes from \"./Scoreboard.module.css\";\n\nconst Scoreboard = (props) => {\n  return (\n    <div className={classes.scoreboard}>\n      <div className={classes.item}>\n        <p className={classes.player}>PLAYER (X)</p>\n        <p className={classes.score}>{props.scorePlayerA}</p>\n      </div>\n      <div className={classes.item}>\n        <p className={classes.player}>TIE</p>\n        <p className={classes.score}>{props.scoreTie}</p>\n      </div>\n      <div className={classes.item}>\n        <p className={classes.player}>COMPUTER (O)</p>\n        <p className={classes.score}>{props.scorePlayerB}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","// checks for free spots on gameboard return true if so else return false\nexport const checkForFreeSpot = (state) => {\n  return Object.values(state).includes(null);\n};\n\n// its looking for possible threats or winning possibilities\nexport const getTargets = (state, markA, markB, mode) => {\n  let searchedMark;\n  if (mode === \"defense\") {\n    searchedMark = markA;\n  } else if (mode === \"offense\") {\n    searchedMark = markB;\n  }\n  const targets = [];\n  if (checkRows(state, markA, markB, searchedMark).targets) {\n    targets.push(...checkRows(state, markA, markB, searchedMark).targets);\n  }\n  if (checkCols(state, markA, markB, searchedMark).targets) {\n    targets.push(...checkCols(state, markA, markB, searchedMark).targets);\n  }\n  if (checkLeftRight(state, markA, markB, searchedMark).targets) {\n    targets.push(...checkLeftRight(state, markA, markB, searchedMark).targets);\n  }\n  return targets;\n};\n\n// check for matchins or possible targets\nconst checkRows = (state, markA, markB, searchedMark) => {\n  let matchingSet;\n  const targets = [];\n  const keys = [\"a\", \"b\", \"c\"];\n  keys.forEach((key) => {\n    // make a set with the marks\n    const pattern = new RegExp(key);\n    const set = Object.entries(state).filter((spot) => (pattern.test(spot[0]) ? spot : false));\n    // check for 3 matches\n    matchingSet = matchingSet ?? checkFor3Matches(set, markA, \"row\");\n    matchingSet = matchingSet ?? checkFor3Matches(set, markB, \"row\");\n    // check for defensive targets\n    if (lookingForTargets(set, searchedMark)) {\n      targets.push(lookingForTargets(set, searchedMark));\n    }\n  });\n  return { targets: targets, matchingRow: matchingSet };\n};\n\nconst checkCols = (state, markA, markB, searchedMark) => {\n  let matchingSet;\n  const targets = [];\n  const keys = [\"0\", \"1\", \"2\"];\n  keys.forEach((key) => {\n    // make a set with the marks\n    const pattern = new RegExp(key);\n    const set = Object.entries(state).filter((spot) => (pattern.test(spot[0]) ? spot : false));\n    // check for 3 matches\n    matchingSet = matchingSet ?? checkFor3Matches(set, markA, \"col\");\n    matchingSet = matchingSet ?? checkFor3Matches(set, markB, \"col\");\n    // check for defensive targets\n    if (lookingForTargets(set, searchedMark)) {\n      targets.push(lookingForTargets(set, searchedMark));\n    }\n  });\n  return { targets: targets, matchingCol: matchingSet };\n};\n\nconst checkLeftRight = (state, markA, markB, searchedMark) => {\n  let matching;\n  const targets = [];\n  // making line arrays\n  const lineLeft = Object.entries(state).filter((spot) => spot[0] === \"a0\" || spot[0] === \"b1\" || spot[0] === \"c2\");\n  const lineRight = Object.entries(state).filter((spot) => spot[0] === \"a2\" || spot[0] === \"b1\" || spot[0] === \"c0\");\n  // checking 3 matches\n\n  matching = matching ?? checkFor3Matches(lineLeft, markA, \"left\");\n  matching = matching ?? checkFor3Matches(lineLeft, markB, \"left\");\n  matching = matching ?? checkFor3Matches(lineRight, markA, \"right\");\n  matching = matching ?? checkFor3Matches(lineRight, markB, \"right\");\n\n  if (lookingForTargets(lineLeft, searchedMark)) {\n    targets.push(lookingForTargets(lineLeft, searchedMark));\n  }\n  if (lookingForTargets(lineRight, searchedMark)) {\n    targets.push(lookingForTargets(lineRight, searchedMark));\n  }\n  return { targets: targets, matching: matching };\n};\n\n// check for 3 same marks in a set\nconst checkFor3Matches = (set, mark, type) => {\n  if (set.filter((item) => item[1] === mark).length === 3) {\n    // returns the key of matched line & the mark\n    // get key\n    let key;\n    if (type === \"row\") {\n      key = set[0][0].slice(0, 1);\n    } else if (type === \"col\") {\n      key = set[0][0].slice(1);\n    } else if (type === \"left\") {\n      key = \"l\";\n    } else if (type === \"right\") {\n      key = \"r\";\n    }\n    return key + mark; // '1X' or 'bO' or 'cX'\n  }\n};\n\n// check for 2 same mark & an empty place in a set\nconst lookingForTargets = (set, mark) => {\n  const countSameMarks = set.filter((item) => item[1] === mark).length;\n  const countEmptySpots = set.filter((item) => item[1] === null).length;\n  if (countSameMarks > 1) {\n    if (countEmptySpots === 1) {\n      // returns the key of the spot\n      const [keyOfTarget] = set.filter((item) => item[1] === null).map((spot) => spot[0]);\n      return keyOfTarget;\n    }\n  }\n};\n\nexport const checkForWinner = (state, markA, markB) => {\n  const row = checkRows(state, markA, markB).matchingRow;\n  const col = checkCols(state, markA, markB).matchingCol;\n  const leftRight = checkLeftRight(state, markA, markB).matching;\n  let winner;\n  let line;\n\n  if (row || col || leftRight) {\n    if (row) {\n      winner = row[1];\n      line = row[0];\n    }\n    if (col) {\n      winner = col[1];\n      line = col[0];\n    }\n    if (leftRight) {\n      winner = leftRight[1];\n      line = leftRight[0];\n    }\n    return { winner: winner, line: line };\n  } else {\n    return false;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport classes from \"./index.module.css\";\n\nReactDOM.render(<App className={classes} />, document.getElementById(\"root\"));\n"],"sourceRoot":""}